/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './conf/__root'
import { Route as DashboardRouteImport } from './conf/_dashboard.route.ts'
import { Route as IndexRouteImport } from './conf/index.route.ts'
import { Route as DashboardSystemsRouteImport } from './conf/_dashboard/systems.route.ts'
import { Route as DashboardLeaderboardRouteImport } from './conf/_dashboard/leaderboard.route.ts'
import { Route as DashboardAgentsRouteImport } from './conf/_dashboard/agents.route.ts'
import { Route as DashboardAuthenticatedRouteImport } from './conf/_dashboard/_authenticated.route.ts'
import { Route as AuthRegisterRouteImport } from './conf/_auth/register.route.ts'
import { Route as AuthLogoutRouteImport } from './conf/_auth/logout.route.tsx'
import { Route as AuthLoginRouteImport } from './conf/_auth/login.route.ts'
import { Route as DashboardSystemsIndexRouteImport } from './conf/_dashboard/systems/index.route.ts'
import { Route as DashboardAgentsIndexRouteImport } from './conf/_dashboard/agents/index.route.ts'
import { Route as DashboardAgentsAgentSymbolRouteImport } from './conf/_dashboard/agents/$agentSymbol.route.ts'
import { Route as DashboardAuthenticatedSurveysRouteImport } from './conf/_dashboard/_authenticated/surveys.route.ts'
import { Route as DashboardAuthenticatedFleetRouteImport } from './conf/_dashboard/_authenticated/fleet.route.ts'
import { Route as DashboardAuthenticatedContractsRouteImport } from './conf/_dashboard/_authenticated/contracts.route.ts'
import { Route as DashboardSystemsSystemSymbolIndexRouteImport } from './conf/_dashboard/systems/$systemSymbol/index.route.ts'
import { Route as DashboardAuthenticatedFleetIndexRouteImport } from './conf/_dashboard/_authenticated/fleet/index.route.ts'
import { Route as DashboardAuthenticatedFleetShipSymbolRouteImport } from './conf/_dashboard/_authenticated/fleet/$shipSymbol.route.ts'
import { Route as DashboardSystemsSystemSymbolWaypointWaypointSymbolRouteImport } from './conf/_dashboard/systems/$systemSymbol/waypoint/$waypointSymbol.route.ts'
import { Route as DashboardAuthenticatedFleetShipSymbolOverlayRouteImport } from './conf/_dashboard/_authenticated/fleet/$shipSymbol/_overlay.route.ts'
import { Route as DashboardAuthenticatedFleetShipSymbolOverlayMarketRouteImport } from './conf/_dashboard/_authenticated/fleet/$shipSymbol/_overlay.market.route.ts'

// Create Virtual Routes

const AuthLazyImport = createFileRoute('/_auth')()

// Create/Update Routes

const AuthLazyRoute = AuthLazyImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./conf/_auth.lazy.ts').then((d) => d.Route))

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./conf/_dashboard.lazy.ts').then((d) => d.Route))

const IndexRouteRoute = IndexRouteImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardSystemsRouteRoute = DashboardSystemsRouteImport.update({
  path: '/systems',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardLeaderboardRouteRoute = DashboardLeaderboardRouteImport.update({
  path: '/leaderboard',
  getParentRoute: () => DashboardRouteRoute,
} as any).lazy(() =>
  import('./conf/_dashboard/leaderboard.lazy.ts').then((d) => d.Route),
)

const DashboardAgentsRouteRoute = DashboardAgentsRouteImport.update({
  path: '/agents',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardAuthenticatedRouteRoute =
  DashboardAuthenticatedRouteImport.update({
    id: '/_authenticated',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const AuthRegisterRouteRoute = AuthRegisterRouteImport.update({
  path: '/register',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./conf/_auth/register.lazy.ts').then((d) => d.Route),
)

const AuthLogoutRouteRoute = AuthLogoutRouteImport.update({
  path: '/logout',
  getParentRoute: () => AuthLazyRoute,
} as any)

const AuthLoginRouteRoute = AuthLoginRouteImport.update({
  path: '/login',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() => import('./conf/_auth/login.lazy.ts').then((d) => d.Route))

const DashboardSystemsIndexRouteRoute = DashboardSystemsIndexRouteImport.update(
  {
    path: '/',
    getParentRoute: () => DashboardSystemsRouteRoute,
  } as any,
).lazy(() =>
  import('./conf/_dashboard/systems/index.lazy.ts').then((d) => d.Route),
)

const DashboardAgentsIndexRouteRoute = DashboardAgentsIndexRouteImport.update({
  path: '/',
  getParentRoute: () => DashboardAgentsRouteRoute,
} as any).lazy(() =>
  import('./conf/_dashboard/agents/index.lazy.ts').then((d) => d.Route),
)

const DashboardAgentsAgentSymbolRouteRoute =
  DashboardAgentsAgentSymbolRouteImport.update({
    path: '/$agentSymbol',
    getParentRoute: () => DashboardAgentsRouteRoute,
  } as any).lazy(() =>
    import('./conf/_dashboard/agents/$agentSymbol.lazy.ts').then(
      (d) => d.Route,
    ),
  )

const DashboardAuthenticatedSurveysRouteRoute =
  DashboardAuthenticatedSurveysRouteImport.update({
    path: '/surveys',
    getParentRoute: () => DashboardAuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./conf/_dashboard/_authenticated/surveys.lazy.ts').then(
      (d) => d.Route,
    ),
  )

const DashboardAuthenticatedFleetRouteRoute =
  DashboardAuthenticatedFleetRouteImport.update({
    path: '/fleet',
    getParentRoute: () => DashboardAuthenticatedRouteRoute,
  } as any)

const DashboardAuthenticatedContractsRouteRoute =
  DashboardAuthenticatedContractsRouteImport.update({
    path: '/contracts',
    getParentRoute: () => DashboardAuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./conf/_dashboard/_authenticated/contracts.lazy.ts').then(
      (d) => d.Route,
    ),
  )

const DashboardSystemsSystemSymbolIndexRouteRoute =
  DashboardSystemsSystemSymbolIndexRouteImport.update({
    path: '/$systemSymbol/',
    getParentRoute: () => DashboardSystemsRouteRoute,
  } as any).lazy(() =>
    import('./conf/_dashboard/systems/$systemSymbol/index.lazy.ts').then(
      (d) => d.Route,
    ),
  )

const DashboardAuthenticatedFleetIndexRouteRoute =
  DashboardAuthenticatedFleetIndexRouteImport.update({
    path: '/',
    getParentRoute: () => DashboardAuthenticatedFleetRouteRoute,
  } as any).lazy(() =>
    import('./conf/_dashboard/_authenticated/fleet/index.lazy.ts').then(
      (d) => d.Route,
    ),
  )

const DashboardAuthenticatedFleetShipSymbolRouteRoute =
  DashboardAuthenticatedFleetShipSymbolRouteImport.update({
    path: '/$shipSymbol',
    getParentRoute: () => DashboardAuthenticatedFleetRouteRoute,
  } as any).lazy(() =>
    import('./conf/_dashboard/_authenticated/fleet/$shipSymbol.lazy.ts').then(
      (d) => d.Route,
    ),
  )

const DashboardSystemsSystemSymbolWaypointWaypointSymbolRouteRoute =
  DashboardSystemsSystemSymbolWaypointWaypointSymbolRouteImport.update({
    path: '/$systemSymbol/waypoint/$waypointSymbol',
    getParentRoute: () => DashboardSystemsRouteRoute,
  } as any).lazy(() =>
    import(
      './conf/_dashboard/systems/$systemSymbol/waypoint/$waypointSymbol.lazy.ts'
    ).then((d) => d.Route),
  )

const DashboardAuthenticatedFleetShipSymbolOverlayRouteRoute =
  DashboardAuthenticatedFleetShipSymbolOverlayRouteImport.update({
    id: '/_overlay',
    getParentRoute: () => DashboardAuthenticatedFleetShipSymbolRouteRoute,
  } as any).lazy(() =>
    import(
      './conf/_dashboard/_authenticated/fleet/$shipSymbol/_overlay.lazy.ts'
    ).then((d) => d.Route),
  )

const DashboardAuthenticatedFleetShipSymbolOverlayMarketRouteRoute =
  DashboardAuthenticatedFleetShipSymbolOverlayMarketRouteImport.update({
    path: '/market',
    getParentRoute: () =>
      DashboardAuthenticatedFleetShipSymbolOverlayRouteRoute,
  } as any).lazy(() =>
    import(
      './conf/_dashboard/_authenticated/fleet/$shipSymbol/_overlay.market.lazy.ts'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      preLoaderRoute: typeof AuthLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/logout': {
      preLoaderRoute: typeof AuthLogoutRouteImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/register': {
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthLazyImport
    }
    '/_dashboard/_authenticated': {
      preLoaderRoute: typeof DashboardAuthenticatedRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/agents': {
      preLoaderRoute: typeof DashboardAgentsRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/leaderboard': {
      preLoaderRoute: typeof DashboardLeaderboardRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/systems': {
      preLoaderRoute: typeof DashboardSystemsRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/_authenticated/contracts': {
      preLoaderRoute: typeof DashboardAuthenticatedContractsRouteImport
      parentRoute: typeof DashboardAuthenticatedRouteImport
    }
    '/_dashboard/_authenticated/fleet': {
      preLoaderRoute: typeof DashboardAuthenticatedFleetRouteImport
      parentRoute: typeof DashboardAuthenticatedRouteImport
    }
    '/_dashboard/_authenticated/surveys': {
      preLoaderRoute: typeof DashboardAuthenticatedSurveysRouteImport
      parentRoute: typeof DashboardAuthenticatedRouteImport
    }
    '/_dashboard/agents/$agentSymbol': {
      preLoaderRoute: typeof DashboardAgentsAgentSymbolRouteImport
      parentRoute: typeof DashboardAgentsRouteImport
    }
    '/_dashboard/agents/': {
      preLoaderRoute: typeof DashboardAgentsIndexRouteImport
      parentRoute: typeof DashboardAgentsRouteImport
    }
    '/_dashboard/systems/': {
      preLoaderRoute: typeof DashboardSystemsIndexRouteImport
      parentRoute: typeof DashboardSystemsRouteImport
    }
    '/_dashboard/_authenticated/fleet/$shipSymbol': {
      preLoaderRoute: typeof DashboardAuthenticatedFleetShipSymbolRouteImport
      parentRoute: typeof DashboardAuthenticatedFleetRouteImport
    }
    '/_dashboard/_authenticated/fleet/': {
      preLoaderRoute: typeof DashboardAuthenticatedFleetIndexRouteImport
      parentRoute: typeof DashboardAuthenticatedFleetRouteImport
    }
    '/_dashboard/systems/$systemSymbol/': {
      preLoaderRoute: typeof DashboardSystemsSystemSymbolIndexRouteImport
      parentRoute: typeof DashboardSystemsRouteImport
    }
    '/_dashboard/_authenticated/fleet/$shipSymbol/_overlay': {
      preLoaderRoute: typeof DashboardAuthenticatedFleetShipSymbolOverlayRouteImport
      parentRoute: typeof DashboardAuthenticatedFleetShipSymbolRouteImport
    }
    '/_dashboard/systems/$systemSymbol/waypoint/$waypointSymbol': {
      preLoaderRoute: typeof DashboardSystemsSystemSymbolWaypointWaypointSymbolRouteImport
      parentRoute: typeof DashboardSystemsRouteImport
    }
    '/_dashboard/_authenticated/fleet/$shipSymbol/_overlay/market': {
      preLoaderRoute: typeof DashboardAuthenticatedFleetShipSymbolOverlayMarketRouteImport
      parentRoute: typeof DashboardAuthenticatedFleetShipSymbolOverlayRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRouteRoute,
  DashboardRouteRoute.addChildren([
    DashboardAuthenticatedRouteRoute.addChildren([
      DashboardAuthenticatedContractsRouteRoute,
      DashboardAuthenticatedFleetRouteRoute.addChildren([
        DashboardAuthenticatedFleetShipSymbolRouteRoute.addChildren([
          DashboardAuthenticatedFleetShipSymbolOverlayRouteRoute.addChildren([
            DashboardAuthenticatedFleetShipSymbolOverlayMarketRouteRoute,
          ]),
        ]),
        DashboardAuthenticatedFleetIndexRouteRoute,
      ]),
      DashboardAuthenticatedSurveysRouteRoute,
    ]),
    DashboardAgentsRouteRoute.addChildren([
      DashboardAgentsAgentSymbolRouteRoute,
      DashboardAgentsIndexRouteRoute,
    ]),
    DashboardLeaderboardRouteRoute,
    DashboardSystemsRouteRoute.addChildren([
      DashboardSystemsIndexRouteRoute,
      DashboardSystemsSystemSymbolIndexRouteRoute,
      DashboardSystemsSystemSymbolWaypointWaypointSymbolRouteRoute,
    ]),
  ]),
  AuthLazyRoute.addChildren([
    AuthLoginRouteRoute,
    AuthLogoutRouteRoute,
    AuthRegisterRouteRoute,
  ]),
])

/* prettier-ignore-end */
